---
layout: post
title: 코딩테스트 파이썬으로 풀기
subtitle: 프로그래머스 코딩테스트 파이썬으로 풀어보기
date: 2019-10-13 00:00:00 +0300
description: # Add post description (optional)
tags: [Coding Test, python] # add tag
categories: [Coding Test] # add categories
---

# 파이썬 입문겸 문제풀기

문제 참고 : https://programmers.co.kr/learn/courses/30/lessons/42862?language=python

```
문제 설명
점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.

전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때, 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.

제한사항
전체 학생의 수는 2명 이상 30명 이하입니다.
체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.
여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.
입출력 예
n	lost	reserve	return
5	[2, 4]	[1, 3, 5]	5
5	[2, 4]	[3]	4
3	[3]	[1]	2
입출력 예 설명
예제 #1
1번 학생이 2번 학생에게 체육복을 빌려주고, 3번 학생이나 5번 학생이 4번 학생에게 체육복을 빌려주면 학생 5명이 체육수업을 들을 수 있습니다.

예제 #2
3번 학생이 2번 학생이나 4번 학생에게 체육복을 빌려주면 학생 4명이 체육수업을 들을 수 있습니다.
```

---

# 문제풀이

코딩문제는 스토리가 좋은거같다..처음 읽었을 때는 감이 오질 않았는데, 스토리상으로 생각해보니<br>
잃어버린 친구들이 도움을 요청하는 방식으로 생각을 해보았다.<br>
도둑맞은 친구가 여유있는 친구들 중 자기 사이즈에 맞는 친구에게 부탁해보기로..<br>
코드는 아래와 같다.

```
def solution(n, lost, reserve):

    answer = n - len(lost)

    for i in range(0, len(lost)):
        for j in range(0, len(reserve)):
            if lost[i] == (reserve[j]-1) or lost[i] == (reserve[j]+1):
                reserve.pop(j)
                answer += 1
                break

    return answer
```

이와 같이 했으나 역시나 오답.<br>
여유분이 있는친구가 잃어버릴 수 있다는 것을 빼먹었다.<br>

추가 완료.
정답.

```
def solution(n, lost, reserve):

    answer = n - len(lost)
    lost_tmp = []
    reserve_tmp = []

	# 도둑맞았지만 여유있는 친구들
    for i in range(0, len(lost)):
        for j in range(0, len(reserve)):
            if lost[i] == reserve[j]:
                lost_tmp.append(lost[i]);
                reserve_tmp.append(reserve[j]);
                answer += 1
                break;

    for i in lost_tmp:
        lost.remove(i)

    for i in reserve_tmp:
        reserve.remove(i)

	# 빌려오기
    for i in range(0, len(lost)):
        for j in range(0, len(reserve)):
            if lost[i] == (reserve[j]-1) or lost[i] == (reserve[j]+1):
                reserve.pop(j)
                answer += 1
                break

    return answer
```

다른사람들 풀이보면서 알게된 python 함수 및 문법

-   remove()
-   count()
-   abs()
-   if i in list:
